library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity TwosComplement_8Bit is
    Port (
        binary_in  : in std_logic_vector(7 downto 0); -- 입력 값 (8비트)
        complement : out std_logic_vector(7 downto 0) -- 출력 값 (2의 보수)
    );
end TwosComplement_8Bit;

architecture Behavioral of TwosComplement_8Bit is

    component FULLADDER is
        Port(
            A     : in std_logic;     -- 입력 A
            B     : in std_logic;     -- 입력 B
            C_in  : in std_logic;     -- Carry-In
            S     : out std_logic;    -- 합
            C_out : out std_logic     -- Carry-Out
        );
    end component;

    signal not_binary_in : std_logic_vector(7 downto 0); -- NOT 결과 저장
    signal carry         : std_logic_vector(8 downto 0); -- Carry 신호 (8비트 + Carry-Out)

begin

    -- NOT 연산
    not_binary_in <= not binary_in;

    -- Full Adder를 사용해 2의 보수 계산
    FA0: FULLADDER port map(
        A     => not_binary_in(0), 
        B     => '0', 
        C_in  => '1', -- Carry-In = 1
        S     => complement(0), 
        C_out => carry(1)
    );

    FA1: FULLADDER port map(
        A     => not_binary_in(1), 
        B     => '0', 
        C_in  => carry(1), 
        S     => complement(1), 
        C_out => carry(2)
    );

    FA2: FULLADDER port map(
        A     => not_binary_in(2), 
        B     => '0', 
        C_in  => carry(2), 
        S     => complement(2), 
        C_out => carry(3)
    );

    FA3: FULLADDER port map(
        A     => not_binary_in(3), 
        B     => '0', 
        C_in  => carry(3), 
        S     => complement(3), 
        C_out => carry(4)
    );

    FA4: FULLADDER port map(
        A     => not_binary_in(4), 
        B     => '0', 
        C_in  => carry(4), 
        S     => complement(4), 
        C_out => carry(5)
    );

    FA5: FULLADDER port map(
        A     => not_binary_in(5), 
        B     => '0', 
        C_in  => carry(5), 
        S     => complement(5), 
        C_out => carry(6)
    );

    FA6: FULLADDER port map(
        A     => not_binary_in(6), 
        B     => '0', 
        C_in  => carry(6), 
        S     => complement(6), 
        C_out => carry(7)
    );

    FA7: FULLADDER port map(
        A     => not_binary_in(7), 
        B     => '0', 
        C_in  => carry(7), 
        S     => complement(7), 
        C_out => carry(8) -- 최종 Carry-Out
    );

end Behavioral;
